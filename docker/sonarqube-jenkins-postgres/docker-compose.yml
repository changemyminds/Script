version: '3.2'

services:
  sonarqube-postgres:
    image: postgres:13.2-alpine
    container_name: sonarqube-postgres
    volumes:
      - postgresql-data:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=${DATABASE_USER:? You forget set the DATABASE_USER in the .env}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:? You forget set the DATABASE_USER in the .env}
      - POSTGRES_DB=sonarqube
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"   
    networks:
      - sonarnet

  sonarqube:
    image: sonarqube:8.9.2-community
    volumes:
      - sonarqube-data:/var/lib/sonarqube
      - sonarqube-log:/var/lib/logs
    ports:
      - "9000:9000"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    depends_on:
      - sonarqube-postgres
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarqube-postgres:5432/sonarqube
      - SONARQUBE_JDBC_USERNAME=${DATABASE_USER:? You forget set the DATABASE_USER in the .env}
      - SONARQUBE_JDBC_PASSWORD=${DATABASE_PASSWORD:? You forget set the DATABASE_USER in the .env}
    networks:
      - sonarnet
        
  jenkins:
    image: jenkins/jenkins:lts
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - jenkins-data:/var/jenkins_home
    environment:
      - TZ=Asia/Taipei
    networks:
      - sonarnet
    ports:
      - "8080:8080"
      - "50000:50000"
networks:
  sonarnet:
    driver: bridge

volumes:
  postgresql-data:
  sonarqube-data:
  sonarqube-log:
  jenkins-data:
    
